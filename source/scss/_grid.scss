//格栅系统

/**
 * 输出不同尺寸断点的前缀
 *
 */
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints){
    @debug "test";
    @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
    $min: map-get($breakpoints, $name );
    @return if($min !=0, $min, null);
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
    @if $min {
        @media(min-width: $min){
            @content;
        }
    }@else{
        @content;
    }
}

/**
 * 创建container的mixin
 *
 */
@mixin make-container($padding-x: $container-padding-x) {
    width: 100%;
    padding-right:  $padding-x;
    padding-left:  $padding-x;
    margin-right: auto;
    margin-left: auto;
}

/**
 * 针对每个尺寸设置最大宽度
 *
 **/
@mixin make-container-max-widths ( $max-widths: $container-max-widths, $breakpoints: $grid-breakpoints ) {
    @each $breakpoint, $container-max-width in $max-widths {
        @include media-breakpoint-up($breakpoint, $breakpoints) {
            max-width: $container-max-width;
        }
    }
}

/**
 * 生成列
 *
 **/
@mixin make-col($size, $columns: $grid-columns) {
    flex: 0 0 percentage( $size / $columns);
    max-width: percentage($size / $columns);
}

/**
 * 
 *
 **/
@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
    //%开头类似于mixin，但是不能带参数
    %grid-column {
        position: relative;
        width: 100%;
        min-height: 1px;
        padding-right: ($gutter / 2);
        padding-left: ($gutter / 2);
    }
    
    @each $breakpoint in map-keys($breakpoints) {
        $infix: breakpoint-infix($breakpoint, $breakpoints);

        @for $i from 1 through $columns {
            .col#{$infix}-#{$i} {
                @extend %grid-column;
            }
        }

        .col#{$infix},
        .col#{$infix}-auto {
            @extend %grid-column;
        }

        @include media-breakpoint-up($breakpoint, $breakpoints) {
            @for $i from 1 through $columns {
                .col#{$infix}-#{$i} {
                    @include make-col($i, $columns);
                }
            }
        }
    }
}

/// 
/// 控制宽度
///
@if $enable-grid-classes {
    .container {
        @include make-container();
        @include make-container-max-widths();
    }
}